# Dependabot configuration file for automated version updates
# This configuration is designed to be innovative and autonomous,
# requiring minimal user input by using placeholders that will autofill.

version: 2
updates:
  - package-ecosystem: "${PACKAGE_ECOSYSTEMS}" # e.g., npm, pip, Maven
    directory: "${DIRECTORY}" # Location of package manifests
    schedule:
      interval: "${SCHEDULE_INTERVAL}" # daily, weekly, monthly
      days: ["${SCHEDULE_DAYS}"] # Specific days for updates
    commit-message:
      prefix: "${COMMIT_PREFIX}" # e.g., fix, chore
      template: "${COMMIT_TEMPLATE}" # Custom template for commit messages
    auto-merge:
      enabled: true # Enable automatic merging of PRs
    ignore:
      patterns: ["${IGNORE_PATTERNS}"] # Common patterns for ignoring dependencies
    conflict-resolution:
      strategy: "${CONFLICT_STRATEGY}" # e.g., auto, manual
    security-checks:
      enabled: true # Enable security checks for vulnerabilities
    notifications:
      enabled: true # Enable notifications for updates
      method: "${NOTIFICATION_METHOD}" # e.g., email, Slack
    reporting:
      enabled: true # Enable reporting feature
      format: "${REPORT_FORMAT}" # e.g., markdown, JSON
    versioning-strategy:
      strategy: "${VERSIONING_STRATEGY}" # Define versioning strategy
    optional-settings:
      enable-dry-run: true # Enables a dry run for updates
    environment-settings:
      dev:
        package-ecosystem: "npm"
        directory: "/dev"
      staging:
        package-ecosystem: "pip"
        directory: "/staging"
      production:
        package-ecosystem: "maven"
        directory: "/production"
    custom-scripts:
      pre-update: "${PRE_UPDATE_SCRIPT}" # Script to run before updates
      post-update: "${POST_UPDATE_SCRIPT}" # Script to run after updates
